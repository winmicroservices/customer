name: Docker Image CI for Dev

on:
  push:
    branches:
      - 'dev**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run Tests 
        run: mvn clean test jacoco:report
 
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v4.5
        with:
          coverage_results_path: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.CHANGELOG_RELEASE }}
          skip_check_run: false
          minimum_coverage: 80
          fail_below_threshold: false
          publish_only_summary: false
      # uploads the coverage-report.md artifact    
      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: "*/coverage-results.md"
          retention-days: 1
      - name: Get the Coverage info
        run: |
          echo "Total coverage coverage-overall ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"
          echo "Coverage coveragePercentage ${{ steps.jacoco_reporter.outputs.coveragePercentage }}"
          echo "Coverage coveragePercentageString ${{ steps.jacoco_reporter.outputs.coveragePercentageString }}"
      - name: Publish Coverager Workflow Build Summary
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY
      - name: report
        run: ls - R


  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
      - name: Set up JDK 17
        uses: actions/setup-java@v3.6.0
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -Pnative spring-boot:build-image -Dspring-boot.build-image.imageName=polinchw/demo:${{ steps.vars.outputs.short_ref }}
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker Image
        run: docker push polinchw/demo:${{ steps.vars.outputs.short_ref }}